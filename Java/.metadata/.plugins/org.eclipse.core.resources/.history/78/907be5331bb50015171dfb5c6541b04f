
import java.sql.*;
import java.util.*;

import com.mysql.jdbc.DatabaseMetaData;

public class pruebaArticulo {
	public static Scanner tcl = new Scanner (System.in);
	//metodo global para devolver conexion
	
	public static Connection conectarse()throws SQLException{
		System.out.println("Hola mundo");
		Connection connection = DriverManager.getConnection(
				"jdbc:mysql://localhost/dbprueba", "root", "sistemas");
		System.out.println("Conectado a la base de datos");
		return connection;
	}
	//metodo global para eliminar una fila
	
	
	
	
	
	
	public static void borrado(Connection connection) throws SQLException{
		lectura(connection);
		System.out.println("");
		System.out.println("Escriba un id para borrar");
		int idBorrar = tcl.nextInt();
		tcl.nextLine();
		System.out.println("Esta seguro de que quiere eliminar la fila correspondiente a :"+idBorrar);
		String respuesta=tcl.nextLine();
		if(respuesta=="si"){
			Statement s = connection.createStatement(); 
			ResultSet rs = s.executeQuery ("delete * from articulo where id="+idBorrar);
		}
		else{
			borrado(connection);
		}
		menu();
			
		
		
		
		

	}
	public static void insercion(Connection connection) throws SQLException{
		tcl.nextLine();
		System.out.println("Introduzca nombre :");
		String nombre=tcl.nextLine();
		System.out.println("categoria");
		String categoria = tcl.nextLine();
		System.out.println("inserte el precio");
		double precio = tcl.nextDouble();
		tcl.nextLine();
		
		
		try {
		      // Creamos el PreparedStatement si no estaba ya creado. 
		      	Statement s = connection.createStatement();
		        ResultSet rs = s.executeQuery(
		        		"insert into articulo values ("+nombre+","+categoria+","+precio+")");
		      
		   } catch (SQLException e) {
		      e.printStackTrace();
		   }
		
		System.out.println("Quiere visualizar? \n"
				+ "1.SI\n"
				+ "2.NO");
		int respuesta=tcl.nextInt();
		tcl.nextLine();
		if(respuesta == 1){
			lectura(connection);
		}
		else if(respuesta==2){
			System.exit(0);
		}
		else{
			System.out.println("prueba otra vez");
		}
		
		menu();
	}
	public static void actualizacion(Connection connection) throws SQLException{
		
	}
	public static void lecturaUnica(Connection connection)throws SQLException{
		System.out.println("Introduzca el id");
		int id=tcl.nextInt();
		tcl.nextLine();
		
		Statement s = connection.createStatement();
		ResultSet rs = s.executeQuery("select * from articulo where id="+id);
		
		//java.sql.DatabaseMetaData metaDatos = connection.getMetaData();
				//cogemos la metainformacion de la lectura para trabajar con ella
				ResultSetMetaData rsmd = rs.getMetaData();
				
				//bucle para imprimir el nombre de las columnas
				for (int i = 1; i <= rsmd.getColumnCount(); i++) {
					   System.out.print(rsmd.getColumnName(i)+"\t"+"\t" );
					   
					}
				System.out.println("");
				//System.out.println(prueba.getString(4));
				//el bucle for se ejecutara tantas veces como columnas haya
				//mientras que el while se ejecutara mientras haya algo que leer
				while(rs.next()){
					for(int i=1; i<=rsmd.getColumnCount();i++){
						//para poder hacerlo generico cojo el nombre del campo a buscar de la metainformacion
						System.out.printf(rs.getString(rsmd.getColumnName(i))+"\t"+"\t");
						
					}
					System.out.println("");}
				menu();
	}
	public static void lectura(Connection connection) throws SQLException{
		
		//creamos la consulta
		Statement s = connection.createStatement(); 
		ResultSet rs = s.executeQuery ("select * from articulo");
		
		
		//java.sql.DatabaseMetaData metaDatos = connection.getMetaData();
		//cogemos la metainformacion de la lectura para trabajar con ella
		ResultSetMetaData rsmd = rs.getMetaData();
		
		//bucle para imprimir el nombre de las columnas
		for (int i = 1; i <= rsmd.getColumnCount(); i++) {
			   System.out.print(rsmd.getColumnName(i)+"\t"+"\t" );
			   
			}
		System.out.println("");
		//System.out.println(prueba.getString(4));
		//el bucle for se ejecutara tantas veces como columnas haya
		//mientras que el while se ejecutara mientras haya algo que leer
		while(rs.next()){
			for(int i=1; i<=rsmd.getColumnCount();i++){
				//para poder hacerlo generico cojo el nombre del campo a buscar de la metainformacion
				System.out.printf(rs.getString(rsmd.getColumnName(i))+"\t"+"\t");
				
			}
			System.out.println("");
		}
		//cierro la conexion y 
		s.close();
		connection.close();
		System.out.println("Conexion a la base de datos cerrada");
		menu();
	}
	public static void menu() throws SQLException{
		System.out.println(" 1. LECTURA \n"
				+ "2.NUEVO \n"
				+ "3.EDITOR \n"
				+ "4.ELIMINAR \n"
				+ "5.LEER TODAS \n"
				+ "0.Salir");
		int respuesta = tcl.nextInt();
		tcl.nextLine();
		switch(respuesta){
		case 1:
			lecturaUnica(conectarse());
			break;
		case 2:
			insercion(conectarse());
			break;
		case 3:
			//TODO
			break;
		case 4:
			borrado(conectarse());
			break;
		case 5:
			lectura(conectarse());
			break;
		case 0:
			break;
		}
	}
	public static void main(String args [])throws SQLException{
		
		
		menu();
		
	}
}
